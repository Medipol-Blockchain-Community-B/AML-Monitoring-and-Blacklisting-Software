// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Examining the syntax of Jest tests Should render a button with a progress bar 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AwesomeButtonProgress
    action={[Function]}
    cssModule={null}
    disabled={false}
    fakePress={false}
    loadingLabel="Wait.."
    onPress={null}
    releaseDelay={500}
    resultLabel="Success!"
    rootElement={null}
    size={null}
    type={null}
  >
    Button
  </AwesomeButtonProgress>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "action": [Function],
      "active": false,
      "blocked": false,
      "children": <span
        className="aws-btn__progress"
        data-loading="Wait.."
        data-status="Success!"
      >
        <span>
          Button
        </span>
      </span>,
      "className": "aws-btn--progress",
      "cssModule": null,
      "disabled": false,
      "element": null,
      "fakePress": false,
      "href": null,
      "moveEvents": true,
      "onMouseDown": [Function],
      "onMouseUp": [Function],
      "onPress": null,
      "onReleased": null,
      "placeholder": false,
      "releaseDelay": 500,
      "ripple": false,
      "rootElement": null,
      "size": null,
      "style": Object {},
      "target": null,
      "title": null,
      "to": null,
      "type": null,
      "visible": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span>
          Button
        </span>,
        "className": "aws-btn__progress",
        "data-loading": "Wait..",
        "data-status": "Success!",
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Button",
        },
        "ref": null,
        "rendered": "Button",
        "type": "span",
      },
      "type": "span",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "action": [Function],
        "active": false,
        "blocked": false,
        "children": <span
          className="aws-btn__progress"
          data-loading="Wait.."
          data-status="Success!"
        >
          <span>
            Button
          </span>
        </span>,
        "className": "aws-btn--progress",
        "cssModule": null,
        "disabled": false,
        "element": null,
        "fakePress": false,
        "href": null,
        "moveEvents": true,
        "onMouseDown": [Function],
        "onMouseUp": [Function],
        "onPress": null,
        "onReleased": null,
        "placeholder": false,
        "releaseDelay": 500,
        "ripple": false,
        "rootElement": null,
        "size": null,
        "style": Object {},
        "target": null,
        "title": null,
        "to": null,
        "type": null,
        "visible": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            Button
          </span>,
          "className": "aws-btn__progress",
          "data-loading": "Wait..",
          "data-status": "Success!",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Button",
          },
          "ref": null,
          "rendered": "Button",
          "type": "span",
        },
        "type": "span",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Examining the syntax of Jest tests Should render a button without moveEvents 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AwesomeButton
    action={null}
    active={false}
    blocked={false}
    className={null}
    cssModule={null}
    disabled={false}
    element={null}
    href={null}
    moveEvents={false}
    onPress={null}
    onReleased={null}
    placeholder={false}
    ripple={false}
    rootElement="aws-btn"
    size={null}
    style={Object {}}
    target={null}
    title={null}
    to={null}
    type="primary"
    visible={true}
  >
    Button
  </AwesomeButton>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <span
        className="aws-btn__wrapper"
      >
        <span
          className="aws-btn__content"
        >
          <span>
            Button
          </span>
        </span>
      </span>,
      "className": "aws-btn aws-btn--primary aws-btn--visible",
      "href": null,
      "onClick": [Function],
      "onMouseDown": [Function],
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
      "onMouseUp": [Function],
      "role": "button",
      "style": Object {},
      "target": null,
      "title": null,
      "to": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="aws-btn__content"
        >
          <span>
            Button
          </span>
        </span>,
        "className": "aws-btn__wrapper",
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            Button
          </span>,
          "className": "aws-btn__content",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Button",
          },
          "ref": [Function],
          "rendered": "Button",
          "type": "span",
        },
        "type": "span",
      },
      "type": "span",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <span
          className="aws-btn__wrapper"
        >
          <span
            className="aws-btn__content"
          >
            <span>
              Button
            </span>
          </span>
        </span>,
        "className": "aws-btn aws-btn--primary aws-btn--visible",
        "href": null,
        "onClick": [Function],
        "onMouseDown": [Function],
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
        "onMouseUp": [Function],
        "role": "button",
        "style": Object {},
        "target": null,
        "title": null,
        "to": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="aws-btn__content"
          >
            <span>
              Button
            </span>
          </span>,
          "className": "aws-btn__wrapper",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              Button
            </span>,
            "className": "aws-btn__content",
          },
          "ref": [Function],
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Button",
            },
            "ref": [Function],
            "rendered": "Button",
            "type": "span",
          },
          "type": "span",
        },
        "type": "span",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Examining the syntax of Jest tests Should render a simple primary button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AwesomeButton
    action={null}
    active={false}
    blocked={false}
    className={null}
    cssModule={null}
    disabled={false}
    element={null}
    href={null}
    moveEvents={true}
    onPress={null}
    onReleased={null}
    placeholder={false}
    ripple={false}
    rootElement="aws-btn"
    size={null}
    style={Object {}}
    target={null}
    title={null}
    to={null}
    type="primary"
    visible={true}
  >
    Button
  </AwesomeButton>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <span
        className="aws-btn__wrapper"
      >
        <span
          className="aws-btn__content"
        >
          <span>
            Button
          </span>
        </span>
      </span>,
      "className": "aws-btn aws-btn--primary aws-btn--visible",
      "href": null,
      "onClick": [Function],
      "onMouseDown": [Function],
      "onMouseLeave": [Function],
      "onMouseMove": [Function],
      "onMouseUp": [Function],
      "role": "button",
      "style": Object {},
      "target": null,
      "title": null,
      "to": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="aws-btn__content"
        >
          <span>
            Button
          </span>
        </span>,
        "className": "aws-btn__wrapper",
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            Button
          </span>,
          "className": "aws-btn__content",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Button",
          },
          "ref": [Function],
          "rendered": "Button",
          "type": "span",
        },
        "type": "span",
      },
      "type": "span",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <span
          className="aws-btn__wrapper"
        >
          <span
            className="aws-btn__content"
          >
            <span>
              Button
            </span>
          </span>
        </span>,
        "className": "aws-btn aws-btn--primary aws-btn--visible",
        "href": null,
        "onClick": [Function],
        "onMouseDown": [Function],
        "onMouseLeave": [Function],
        "onMouseMove": [Function],
        "onMouseUp": [Function],
        "role": "button",
        "style": Object {},
        "target": null,
        "title": null,
        "to": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="aws-btn__content"
          >
            <span>
              Button
            </span>
          </span>,
          "className": "aws-btn__wrapper",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              Button
            </span>,
            "className": "aws-btn__content",
          },
          "ref": [Function],
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Button",
            },
            "ref": [Function],
            "rendered": "Button",
            "type": "span",
          },
          "type": "span",
        },
        "type": "span",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Examining the syntax of Jest tests Should render a simple secondary button 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AwesomeButton
    action={null}
    active={false}
    blocked={false}
    className={null}
    cssModule={null}
    disabled={false}
    element={null}
    href={null}
    moveEvents={true}
    onPress={null}
    onReleased={null}
    placeholder={false}
    ripple={false}
    rootElement="aws-btn"
    size={null}
    style={Object {}}
    target={null}
    title={null}
    to={null}
    type="secondary"
    visible={true}
  >
    Button
  </AwesomeButton>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <span
        className="aws-btn__wrapper"
      >
        <span
          className="aws-btn__content"
        >
          <span>
            Button
          </span>
        </span>
      </span>,
      "className": "aws-btn aws-btn--secondary aws-btn--visible",
      "href": null,
      "onClick": [Function],
      "onMouseDown": [Function],
      "onMouseLeave": [Function],
      "onMouseMove": [Function],
      "onMouseUp": [Function],
      "role": "button",
      "style": Object {},
      "target": null,
      "title": null,
      "to": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="aws-btn__content"
        >
          <span>
            Button
          </span>
        </span>,
        "className": "aws-btn__wrapper",
      },
      "ref": [Function],
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            Button
          </span>,
          "className": "aws-btn__content",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Button",
          },
          "ref": [Function],
          "rendered": "Button",
          "type": "span",
        },
        "type": "span",
      },
      "type": "span",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <span
          className="aws-btn__wrapper"
        >
          <span
            className="aws-btn__content"
          >
            <span>
              Button
            </span>
          </span>
        </span>,
        "className": "aws-btn aws-btn--secondary aws-btn--visible",
        "href": null,
        "onClick": [Function],
        "onMouseDown": [Function],
        "onMouseLeave": [Function],
        "onMouseMove": [Function],
        "onMouseUp": [Function],
        "role": "button",
        "style": Object {},
        "target": null,
        "title": null,
        "to": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="aws-btn__content"
          >
            <span>
              Button
            </span>
          </span>,
          "className": "aws-btn__wrapper",
        },
        "ref": [Function],
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              Button
            </span>,
            "className": "aws-btn__content",
          },
          "ref": [Function],
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Button",
            },
            "ref": [Function],
            "rendered": "Button",
            "type": "span",
          },
          "type": "span",
        },
        "type": "span",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
